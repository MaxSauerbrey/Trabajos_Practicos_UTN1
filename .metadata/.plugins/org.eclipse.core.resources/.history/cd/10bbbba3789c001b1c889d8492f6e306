/*
 ============================================================================
 Name        : Trabajo_Practico_1.c
  Author      :
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio_ext.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#define LEN_BUFFER 1000

int   Get_Int(char texto[], char error[], int minimo, int maximo);
float Get_Float (char texto[], char error[], int minimo, int maximo);
float SumarDosNumeros (float numero1, float numero2);
float RestarDosNumeros (float numero1, float numero2);
float MultiplicarDosNumeros (float numero1, float numero2);
float DividirDosNumeros (float numero1, float numero2);
int DefineFlotante(float numero1);
int FactorearNumero (float numeroIngresado);
void MenuCalcular(float variable1, float variable2, int flag1,int flag2, char msj[], char operando);
void MostrarFactorial (float var1,float var2,int resultado1, int resultado2);


//---------------------------------------
int ValidarUnNumeroEntero(char buffer[]);
int ValidarUnNumeroFlotante(char buffer[]);

int Pedir_Entero (char msj[], char msjError[]);
int Pedir_Entero_Rango (char msj[], char msjError[], int min, int max, char errorRango[]);
float Pedir_Float (char msj[], char msjError[]);
float Pedir_Float_Rango (char msj[], char msjError[], int min, int max, char errorRango[]);

int main(void)
{
	int opciones;
	int flagVariable1;
	int flagVariable2;
	int flagMenu=0;
	float variable1;
	float variable2;
	float resultadoSuma;
	float resultadoResta;
	float resultadoDivision;
	float resultadoMultiplicacion;
	int resultadoFactorial1;
	int resultadoFactorial2;
	flagVariable1=0;
	flagVariable2=0;

	do
	{
		if(flagMenu==0)
		{
		printf("\n         ----------\n");
		printf("----------------------------\n");

		printf("Â¡Bienvenidos a la calculadora!\n");

		printf("----------------------------\n");
		printf("         ----------\n");
		}

		printf("\nMenu principal.\n");

		//Primera variable.
		if(flagVariable1==0)
		{
			printf("\n1.Ingrese el primer operando (A=x).\n");
		}
		else
		{
			printf("1.El primer operando ingresado es: (A = %.2f)\n",variable1);
		}

		//Segunda variable.
		if(flagVariable2==0)
		{
			printf("2.Ingrese el segundo operando (B=y).\n");
		}
		else
		{
			printf("2.El segundo operando ingresado es: (B = %.2f)\n",variable2);
		}
		//Calcular todas las operaciones
		printf("3.Calcular todas las operaciones.\n");
		MenuCalcular(variable1, variable2, flagVariable1, flagVariable2,"a)Calcular la suma",'+');
		MenuCalcular(variable1, variable2, flagVariable1, flagVariable2,"b)Calcular la resta",'-');
		MenuCalcular(variable1, variable2, flagVariable1, flagVariable2,"c)Calcular la division",'/');
		MenuCalcular(variable1, variable2, flagVariable1, flagVariable2,"d)Calcular la multiplicacion",'*');
		MenuCalcular(variable1, variable2, flagVariable1, flagVariable2,"e)Calcular el Factorial",'&');
		//Mostrar resultados
		printf("4.Informe de resultados.\n");
		printf("5.Salir.\n");

		opciones= Pedir_Entero_Rango("\nIngrese una opcion (1-5): ","ERROR. Reingrese solamente un numero (1-5):",1,5,"Error de rango. Reingrese");

		switch(opciones)
		{
		case 1:
			 //system("clear");
			 variable1 = Pedir_Float("\nIngrese el primer operando:","Error, reingrese un numero:");
			 flagVariable1++;
			 flagMenu++;
			 break;
		case 2:
			if(flagVariable1==0)
			{
				printf("ERROR.Debe ingresar el primer operando (opcion 1).\n");
				break;
			}
			variable2 = Get_Float("Ingrese el segundo operando:","Error, reingrese el numero", -10000, 10000);
			flagVariable2++;
			flagMenu++;
			break;
		case 3:
			if(flagVariable1==0 && flagVariable2==0)
			{
				printf("\nERROR. Primero debe ingresar ambos operandos (opcion 1-opcion2).");
				break;
			}
			else
			{
				if(flagVariable1==0)
				{
					printf("\nERROR. Debe ingresar el primer operando (opcion 1).");
					break;
				}
				if(flagVariable2==0)
				{
					printf("\nERROR. Debe ingresar el primer segundo operando (opcion 2).");
					break;
				}
			}

			printf("Todas las operaciones han sido calculadas.\n");
			//Llamo a todas las funciones.
			resultadoSuma=SumarDosNumeros(variable1,variable2);
			resultadoResta=RestarDosNumeros(variable1,variable2);
			resultadoDivision=DividirDosNumeros(variable1, variable2);
			resultadoMultiplicacion=MultiplicarDosNumeros(variable1, variable2);
			resultadoFactorial1=FactorearNumero(variable1);
			resultadoFactorial2=FactorearNumero(variable2);
			flagMenu++;
			break;


		case 4:
			if(flagVariable1==0 && flagVariable2==0)
			{
				printf("\nERROR. Primero debe ingresar ambos operandos (opcion 1-opcion2).");
				break;
			}
			else
			{
				//if()
			}
			//Muestra Suma
			printf("El resultado de %.2f + %.2f es: %.2f.\n",variable1,variable2,resultadoSuma);
			//Muestra Resta
			printf("El resultado de %.2f - %.2f es: %.2f.\n",variable1,variable2,resultadoResta);
			//Muestra Division
			if(variable2!=0)
			{
				printf("El resultado de %.2f / %.2f es: %.2f.\n",variable1,variable2,resultadoDivision);
			}
			else
			{
				printf("La division por cero no esta definida.\n");
			}
			//Muestra multiplicacion
			printf("El resultado de %.2f * %.2f es: %.2f.\n",variable1,variable2,resultadoMultiplicacion);



			//Muestra Factorial
			MostrarFactorial(variable1,variable2,resultadoFactorial1,resultadoFactorial2);
/*
			if(resultadoFactorial1>-1)
				{
					printf("El factorial de %.2f es: %d.\n",variable1,resultadoFactorial1);
				}
				else
				{
					if(resultadoFactorial1==-3)
					{
						printf("No se pudo calcular el factorial de A= %.2f, el numero ingresado debe ser un numero entero positivo.\n",variable1);
					}
					if(resultadoFactorial1==-2)
					{
						printf("No se pudo calcular el factorial de A = %.2f, el numero ingresado debe ser un numero positivo.\n",variable1);
					}
					if(resultadoFactorial1== -1)
						{
							printf("No se pudo calcular el factorial de A = %.2f, el numero ingresado debe ser un numero entero.\n",variable1);
						}
				}

				if(resultadoFactorial2>-1)
					{
						printf("El factorial de %.2f es: %d.\n",variable2,resultadoFactorial2);
					}
					else
					{
						if(resultadoFactorial2==-3)
						{
							printf("No se pudo calcular el factorial de B= %.2f, el numero ingresado debe ser un numero entero positivo.\n",variable2);
						}
						if(resultadoFactorial2==-2)
						{
							printf("No se pudo calcular el factorial de B = %.2f, el numero ingresado debe ser un numero positivo.\n",variable2);
						}
						if(resultadoFactorial2== -1)
							{
								printf("No se pudo calcular el factorial de B = %.2f, el numero ingresado debe ser un numero entero.\n",variable2);
							}
					}
*/


			break;
			flagMenu++;
		}

	}while(opciones !=5);

	return EXIT_SUCCESS;
}







int Get_Int (char texto[], char error[], int minimo, int maximo)
{
	int numeroIngresado;
	printf("%s",texto);
	scanf("%d",&numeroIngresado);

	while(numeroIngresado<minimo || numeroIngresado>maximo)
	{
		printf("%s",error);
		scanf("%d",&numeroIngresado);
	}

	return numeroIngresado;
}

float Get_Float (char texto[], char error[], int minimo, int maximo)
{
	float numeroIngresado;
	//float resultado;

	printf("%s",texto);
	scanf("%f",&numeroIngresado);

	while(numeroIngresado<minimo || numeroIngresado>maximo)
	{
		printf("%s",error);
		scanf("%f",&numeroIngresado);
	}

	return numeroIngresado;

}

float SumarDosNumeros (float numero1, float numero2)
{
	float resultado;

	resultado = numero1+numero2;

	return resultado;
}

float RestarDosNumeros (float numero1, float numero2)
{
	float resultado;

	resultado= numero1-numero2;

	return resultado;
}

float MultiplicarDosNumeros (float numero1, float numero2)
{
	float resultado;

	resultado= numero1*numero2;

	return resultado;

}

float DividirDosNumeros (float numero1, float numero2)
{
	float resultado;

	resultado =numero1/numero2;

	return resultado;

}


int FactorearNumero (float numeroIngresado)
{
	int i;
	int factorial=1;
	int result;
	//int aux=1;
	//int resultadoEsFlotante;

	result=DefineFlotante(numeroIngresado);
	//printf("%d",result);

	if(result==0)
	{
		if (numeroIngresado>-1 )//numeroIngresado!=0
		{
			if(numeroIngresado != 0)
			{
				for (i = numeroIngresado; i > 1; i--)
				{
					factorial *= i;
				}
			}
			else
			{
				if(numeroIngresado==0)
				{
					factorial=1;
				}
			}
		}
		else
		{
			if(numeroIngresado<-1)
			{
				factorial=-2; // Factorial Negativo.
			}
		}
	}
	else
	{
		if(result==1)
		{
			factorial = -1; //Factorial Numero Flotante.
		}
		else
		{
			if(numeroIngresado<-1)
			{
				factorial=-3; // Factorial Flotante Negativo.
			}
		}
	}


	//factorial=aux;

	return factorial;

}



int DefineFlotante(float numero1)
{
	int resultado;
	int buffer;

	buffer=numero1;
	//printf("El numero es: %f",buffer);
	buffer=(int)buffer;
	//printf("El numero es: %d",buffer);

	if(numero1>buffer)
	{
		resultado=1;		//Es flotante
	}

	else
	{
		if(numero1==buffer)		//Es un entero
		{
			resultado=0;
		}
	}

	return resultado;
}

void MenuCalcular(float variable1, float variable2, int flag1,int flag2, char msj[], char operando)
{


	if(flag1==0 && flag2 ==0)
	{
		printf("	%s (A%cB).\n",msj,operando);
	}
	else
	{
		if(flag1>0 && flag2 ==0)
		{
			printf("	%s (%.2f)%cB.\n",msj,variable1,operando);
		}
		if(flag1>0 && flag2>0 )
		{
			printf("	%s (%.2f)%c(%.2f).\n",msj,variable1,operando,variable2);
		}
	}
}









/*
int FactorearNumero (char buffer[])
{
	int i;
	int factorial=1;
	//int result;
	int resultadoEsFlotante;


	resultadoEsFlotante=ValidarUnNumeroFlotante2(buffer);


	if(resultadoEsFlotante==0)
	{
		if (numeroIngresado>-1 && numeroIngresado!=0)
		{
			for (i = numeroIngresado; i > 1; i--)
			{
				factorial *= i;
			}
		}
	}
		return factorial;

}


int ValidarUnNumeroFlotante2(float numeroIngresado)
{
	int retorno=1;
	int largo;
	int i;
	int contador=0;
	char buffer[LEN_BUFFER];

	sprintf(buffer,"%f",numeroIngresado);
	largo= strlen(buffer);

	if(largo>0)
	{
		for(i=0;i<largo;i++)
		{
			if(buffer[i]=='.' || buffer[i]==',')
			{
				contador++;
			}
			else
			{
				if(isdigit(buffer[i])==0)
				{
					if(i ==0)
					{
						if(buffer[0] != '-')
						{
							retorno=0;
							break;
						}
					}
					else
					{
						retorno=0; //Si no es '-' en i==0
						break;
					}
				}
			}
		}

		//Ver esto
		// || contador == 0
		if(contador > 1)
		{
			retorno = 0;
		}
	}
	else
	{
		retorno=0; //Si lo que ingresa el usuario es una cadena vacia (largo = 0)
	}

	return retorno;
}




*/











/*
int DefineFlotante(float numero1)
{
	int resultado;
	int buffer;

	buffer=numero1;
	//printf("El numero es: %f",buffer);
	buffer=(int)buffer;
	//printf("El numero es: %d",buffer);

	if(numero1>buffer)
	{
		resultado=1;		//Es flotante
	}

	else
	{
		if(numero1==buffer)		//Es un entero
		{
			resultado=0;
		}
	}

	return resultado;
}
*/

/*
int FactorearNumero (float numeroIngresado)
{
	//char buffer[LEN_BUFFER];
	//int i;
	int retorno;
	//int largo;
	//int contador=0;
	//int contadorNumero=0;
	//largo=strlen(buffer);
	//char aux[];
	int numero;

	retorno=ValidarUnNumeroFlotante(numeroIngresado);



	return retorno;

}

*/

//----------------------------------------------------

int ValidarUnNumeroEntero(char buffer[])
{
	int retorno=1;
	int i;
	int largo;

	largo=strlen(buffer);

	if(largo >0)// Pregunto si la cadena ingresada no este vacia
	{
		for(i=0; i<largo; i++)//Recorro el buffer desde ppio a fin
		{
			if(isdigit(buffer[i])==0)
			{
				if(i ==0)
				{
					if(buffer[0] != '-')
					{
						retorno=0;
						break;
					}
				}
				else
				{
					retorno=0; //Si no es '-' en i==0
					break;
				}
			}
		}
	}
	else
	{
		retorno=0; //Si lo que ingresa el usuario es una cadena vacia (largo = 0)
	}

	return retorno;
}

int Pedir_Entero (char msj[], char msjError[])
{
	int retorno;
	char buffer[LEN_BUFFER];

	printf("%s",msj);
	__fpurge(stdin);
	scanf("%[^\n]",buffer);

	while(ValidarUnNumeroEntero(buffer)==0)
	{
		printf("%s",msjError);
		__fpurge(stdin);
		scanf("%[^\n]",buffer);
	}

	retorno = atoi(buffer); //Recibe una cadena,

	return retorno;
}

int Pedir_Entero_Rango(char msj[], char msjError[], int min, int max, char errorRango[])
{
	int retorno;
	int numero;

	numero = Pedir_Entero(msj, msjError);

	while(numero<min || numero>max)
	{
		printf("%s (minimo => %d maximo => %d).\n",errorRango,min,max);
		numero = Pedir_Entero(msj, msjError);
	}

	retorno=numero;

	return retorno;
}

int ValidarUnNumeroFlotante(char buffer[])
{
	int retorno=1;
	int largo;
	int i;
	int contador=0;

	largo= strlen(buffer);

	if(largo>0)
	{
		for(i=0;i<largo;i++)
		{
			if(buffer[i]=='.' || buffer[i]==',')
			{
				contador++;
			}
			else
			{
				if(isdigit(buffer[i])==0)
				{
					if(i ==0)
					{
						if(buffer[0] != '-')
						{
							retorno=0;
							break;
						}
					}
					else
					{
						retorno=0; //Si no es '-' en i==0
						break;
					}
				}
			}
		}

		//Ver esto
		// || contador == 0
		if(contador > 1)
		{
			retorno = 0;
		}
	}
	else
	{
		retorno=0; //Si lo que ingresa el usuario es una cadena vacia (largo = 0)
	}

	return retorno;
}

float Pedir_Float (char msj[], char msjError[])
{
	float retorno;
	char buffer[LEN_BUFFER];

	printf("%s",msj);
	__fpurge(stdin);
	scanf("%[^\n]",buffer);


	while(ValidarUnNumeroFlotante(buffer)==0)
	{
		printf("%s",msjError);
		__fpurge(stdin);
		scanf("%[^\n]",buffer);
	}

	retorno = atof(buffer); //Recibe una cadena,


	return retorno;
}

float Pedir_Float_Rango(char msj[], char msjError[], int min, int max, char errorRango[])
{
	int retorno;
	int numero;

	numero = Pedir_Float(msj, msjError);

	while(numero<min || numero>max)
	{
		printf("%s (minimo => %d maximo => %d).\n",errorRango,min,max);
		numero = Pedir_Float(msj, msjError);
	}

	retorno=numero;

	return retorno;
}


// Funcion calcular todas

void MostrarFactorial (float var1,float var2,int resultado1, int resultado2)
{

	if(resultado1>-1)
	{
		printf("El factorial de %.2f es: %d.\n",var1,resultado1);
	}
	else
	{
		if(resultado1==-3)
		{
			printf("No se pudo calcular el factorial de A= %.2f, el numero ingresado debe ser un numero entero positivo.\n",var1);
		}
		if(resultado1==-2)
		{
			printf("No se pudo calcular el factorial de A = %.2f, el numero ingresado debe ser un numero positivo.\n",var1);
		}
		if(resultado1== -1)
		{
			printf("No se pudo calcular el factorial de A = %.2f, el numero ingresado debe ser un numero entero.\n",var1);
		}
	}

	if(resultado2>-1)
	{
		printf("El factorial de %.2f es: %d.\n",var2,resultado2);
	}
	else
	{
		if(resultado2==-3)
		{
			printf("No se pudo calcular el factorial de B= %.2f, el numero ingresado debe ser un numero entero positivo.\n",var2);
		}
		if(resultado2==-2)
		{
			printf("No se pudo calcular el factorial de B = %.2f, el numero ingresado debe ser un numero positivo.\n",var2);
		}
		if(resultado2== -1)
		{
			printf("No se pudo calcular el factorial de B = %.2f, el numero ingresado debe ser un numero entero.\n",var2);
		}
	}
}
